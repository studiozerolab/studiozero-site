---
const { tiers = [], monthly = false } = Astro.props;
---

<div class="std-grid std-grid--smart std-grid--fixed">
        {tiers.map((t) => (
          <article
            class={[
              "bg-white border border-gray-200 rounded-lg p-6 shadow-md",
              t.featured
                ? "border-zinc-300 shadow-sm bg-white"
                : "border-zinc-200 bg-white",
            ].join(" ")}
          >

            { t.location === "homeServices" &&
                /* PRICE HomePage Servies Card */
                /* centered icon */
                <div class="flex justify-center mb-4">
                {/* -----rounded-full / h-12 w-12 rounded-md------- */}
                    <div class="w-12 h-12 flex items-center justify-center  rounded-md bg-black">
                        <div set:html={t.icon}></div>
                    </div>
                </div>

              <div class="card-head">
                <h3 class="card-title">{t.title}</h3>
                {t.tag &&
                    <span class="inline-flex items-center whitespace-nowrap text-xs px-2 py-0.5 rounded-full bg-zinc-100 text-zinc-700 leading-none">
                        {t.tag}
                    </span>
                }
              </div>
              }

              {/* PRICE PackagesPage Card */}
              {t.location === "packagesPage" &&
                <div class="card-head justify-between">
                <h3 class="card-title">{t.title}</h3>
                <div class="text-right">
                    <div class="text-2xl font-bold text-zinc-900">{t.price}</div>
                        <div class="text-xs text-zinc-500">
                            {t.cadence ?? (monthly ? "/mo" : "flat")}
                        </div>
                    </div>
                </div>
              }

            {/* PRICE HomePage Packages Card (price right aligned under name) */}
              {t.location === "homePackages" &&
              <div class="card-head">
              <h3 class="card-title">{t.title}</h3>
              {t.tag &&
                <span class="inline-flex items-center whitespace-nowrap text-xs px-2 py-0.5 rounded-full bg-zinc-100 text-zinc-700 leading-none">
                  {t.tag}
                </span>
                }
              </div>

              <div class="card-body">
                <p class="mt-2 text-2xl font-bold text-gray-900">
                    
                  {typeof t.price === "number" ? `$${t.price}`: t.price}
                </p>
              </div>
              }

              <p class="mt-3 text-sm text-zinc-600">{t.desc}</p>

              { t.points && t.location !== "homeServices" &&
                <ul class="mt-4 space-y-2 text-sm text-gray-600">
                    {t.points.map((f) => (
                    <li class="flex gap-2">
                        <svg class="h-4 w-4 mt-0.5 text-emerald-500 shrink-0" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                        <path fill-rule="evenodd" d="M16.704 5.29a1 1 0 0 1 .006 1.414l-7.25 7.3a1 1 0 0 1-1.42.006L3.29 9.26A1 1 0 1 1 4.71 7.84l3.026 3.026 6.535-6.53a1 1 0 0 1 1.414-.006Z" clip-rule="evenodd"/>
                        </svg>
                        <span>{f}</span>
                    </li>
                    ))}
                </ul>
              }

              {/* --- CTA Links --- */}

              {/* BUTTONS centered */}
              { t.ctaStyle === "button" &&
                <div class="card-actions">
                    {t.ctas?.map((c) => (
                        <a
                        href={c.href}
                        class={[
                            "btn",
                            c.style === "solid"
                            ? "btn-black"
                            : "btn-outline",
                        ].join(" ")}
                        >
                        {c.label}
                        </a>
                    ))}
                </div> 
              }

              {/* TEXT right aligned */}
              { t.ctaStyle === "text" &&
              <div class="mt-5">
                <a href={t.learnHref}
               class="inline-flex items-center gap-1 text-sm font-medium text-zinc-700 hover:text-zinc-900 underline underline-offset-4 decoration-zinc-300 hover:decoration-zinc-500">
              Learn more <span aria-hidden>â†’</span>
                </a>
                </div>
              }
            
          </article>
        ))}
      </div>